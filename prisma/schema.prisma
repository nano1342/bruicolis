// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Album {
  id               Int               @id @default(autoincrement())
  name             String            @db.VarChar(255)
  releaseDate      DateTime
  songAlbumLinks   SongAlbumLink[]
  artistAlbumLinks ArtistAlbumLink[]
}

model Artist {
  id               Int               @id @default(autoincrement())
  name             String            @db.VarChar(255)
  musicbrainzId    Int?
  songArtistLinks  SongArtistLink[]
  artistAlbumLinks ArtistAlbumLink[]
}

model Song {
  id              Int              @id @default(autoincrement())
  name            String           @db.VarChar(255)
  releaseDate     DateTime
  songAlbumLinks  SongAlbumLink[]
  songArtistLinks SongArtistLink[]
}

model SongArtistLink {
  id       Int    @id @default(autoincrement())
  song     Song   @relation(fields: [songId], references: [id])
  songId   Int
  artist   Artist @relation(fields: [artistId], references: [id])
  artistId Int
}

model SongAlbumLink {
  id      Int   @id @default(autoincrement())
  song    Song  @relation(fields: [songId], references: [id])
  songId  Int
  album   Album @relation(fields: [albumId], references: [id])
  albumId Int
}

model ArtistAlbumLink {
  id       Int    @id @default(autoincrement())
  artist   Artist @relation(fields: [artistId], references: [id])
  artistId Int
  album    Album  @relation(fields: [albumId], references: [id])
  albumId  Int
}

model Tag {
  id    Int    @id @default(autoincrement())
  label String @db.VarChar(50)
}

model TagLink {
  id       Int @id @default(autoincrement())
  idTag    Int
  idSong   Int
  idAlbum  Int
  idArtist Int
}
